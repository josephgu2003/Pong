{"Functions::setupTanSpaceNormals" : "                                                                                                                               vec3 T = normalize(vec3(modelMat_ * vec4(Tangent,   0.0)));                                          vec3 B = normalize(vec3(modelMat_ * vec4(Bitangent, 0.0)));                                          vec3 N = normalize(vec3(modelMat_ * vec4(Normals_,    0.0)));                                         vs_out.fragPos =  vec3(modelMat_*vec4(aPos,1.0));                                                     mat3 TBN = transpose(mat3(T, B, N));                                                vs_out.TangentLightDir = TBN * dirLight.dir;                                        vs_out.TangentViewPos = TBN * viewPos;                                                  vs_out.TangentFragPos = TBN * vs_out.fragPos;"
, "Functions::setupTanSpaceNormalsNoModelMat" : "                                                        vec3 T = normalize(Tangent);                                                                     vec3 B = normalize(Bitangent);                                                                       vec3 N = normalize(Normals_);                                                                 vs_out.fragPos = aPos;                                                                               mat3 TBN = transpose(mat3(T, B, N));                                                vs_out.TangentLightDir = TBN * dirLight.dir;                                        vs_out.TangentViewPos = TBN * viewPos;                                                  vs_out.TangentFragPos = TBN * vs_out.fragPos;"
}

